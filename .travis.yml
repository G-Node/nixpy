sudo: false

language: python

os:
  - linux
  - osx

compiler:
  - gcc
  - clang


env:
  global:
    - CC=gcc-4.8
    - CXX=g++-4.8
    - NIX_LIBDIR=./nix-build/inst/lib
    - NIX_INCDIR=./nix-build/inst/include
    - TOOLCHAIN=default CONFIG=Release
    - TOOLCHAIN=default CONFIG=Debug
    - TOOLCHAIN=libcxx CONFIG=Debug
    - TOOLCHAIN=libcxx CONFIG=Release
    - TOOLCHAIN=clang-libstdcxx CONFIG=Release
    - TOOLCHAIN=clang-libstdcxx CONFIG=Debug
    - TOOLCHAIN=xcode CONFIG=Debug
    - TOOLCHAIN=xcode CONFIG=Release
    - TOOLCHAIN=osx-10-9 CONFIG=Debug
    - TOOLCHAIN=osx-10-9 CONFIG=Release
    - TOOLCHAIN=gcc CONFIG=Debug
    - TOOLCHAIN=gcc CONFIG=Release
    - TOOLCHAIN=gcc-4-8 CONFIG=Release
    - TOOLCHAIN=gcc-4-8 CONFIG=Debug

matrix:
  include:
    - os: linux
      dist: trusty
      python: "2.7_with_system_site_packages"
      env: COVERALLS=1
    - os: linux
      dist: trusty
      python: "3.2"
      env: COVERALLS=0
    - os: osx
      osx_image: xcode7.2
      language: generic
      

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - kalakris-cmake
      - boost-latest
    packages:
      - libcppunit-dev
      - libboost1.55-all-dev
      - libhdf5-serial-dev
      - cmake
      - g++-4.8

before install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install boost-python ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install cmake ; fi

install:
- which cmake
- cmake --version

- pip install coveralls numpy
- git clone https://github.com/G-Node/nix.git nix-build
- cd nix-build
- cmake -DCMAKE_INSTALL_PREFIX=./inst -DBUILD_TESTING=OFF .
- make
- make install
- cd ..


 

script:
- python setup.py build
- if [ $COVERALLS = 1 ]; then
    coverage run --source=nix setup.py test;
    coverage report -m;
  else
    python setup.py test;
  fi;

after_success:
- if [ $COVERALLS = 1 ]; then coveralls; fi;

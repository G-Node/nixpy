sudo: required
dist: trusty

language: python

env:
  global:
    - NIX_BRANCH=master

matrix:
  include:
    - python: "2.7"
      os: linux
      dist: xenial
      env: pymajor=2
    - python: "3.6"
      os: linux
      dist: xenial
      env: pymajor=3
    - python: "3.7"
      os: linux
      env: pymajor=3 compat=1
      dist: xenial
      sudo: true
    - python: "3.7"
      os: linux
      env: pymajor=3
      dist: xenial
    - python: "3.8"
      os: linux
      env: pymajor=3 coverage=1
      dist: xenial
    - language: generic
      os: osx
      env: pymajor=2
      addons:
        homebrew:
          packages:
            - python2
            - cmake
            - cppunit
            - hdf5
            - numpy
          update: true
    - language: generic
      os: osx
      env: pymajor=3
      addons:
        homebrew:
          packages:
            - python3
            - cmake
            - cppunit
            - hdf5
            - numpy
          update: true
  allow_failures:
    - env: pymajor=3 compat=1

addons:
  apt:
    packages:
      - cmake
      - libcppunit-dev
      - libhdf5-serial-dev
      - libboost-all-dev

before_install:
  # build nix for compat tests
  - if [[ "${compat}" == 1 ]]; then
      nixprefix="/usr/local";
      export NIX_INCDIR=${nixprefix}/include/nixio-1.0;
      export NIX_LIBDIR=${nixprefix}/lib;
      export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${nixprefix}/lib/pkgconfig;
      git clone --branch ${NIX_BRANCH} https://github.com/G-Node/nix /tmp/libnix;
      pushd /tmp/libnix;
      mkdir build;
      pushd build;
      cmake -DCMAKE_INSTALL_PREFIX=${nixprefix} ..;
      make;
      sudo make install;
      popd;
      popd;
    fi
  # For macOS python3
  - export PATH="/usr/local/opt/python@3.8/bin:$PATH"
  - alias pip2='pip'
  - if [[ "${TRAVIS_OS_NAME}" != "osx" ]]; then pip${pymajor} install --upgrade numpy; fi
  - pip${pymajor} install --upgrade h5py pytest pytest-xdist pytest-cov six;
  - if [[ "${pymajor}" == 2 ]]; then pip${pymajor} install enum34; fi
  - which pip${pymajor}
  - which python${pymajor}
  - python${pymajor} --version

install:
  - python${pymajor} setup.py build

script:
  - if [[ "${compat}" == 1 ]]; then
      pytest --cov=nixio --nix-compat -nauto;
    else
      pytest --cov=nixio -nauto;
    fi

after_success:
  - if [[ "${coverage}" == 1 ]]; then
      pip install codecov;
      codecov;
    fi

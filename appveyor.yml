version: 1.4.{build}

environment:

  DEPLOY_DIR: deploy

  matrix:
    - MINICONDA: "C:\\Miniconda"
      bits: 32
    - MINICONDA: "C:\\Miniconda35"
      bits: 32
    - MINICONDA: "C:\\Miniconda-x64"
      bits: 64
    - MINICONDA: "C:\\Miniconda35-x64"
      bits: 64

init:
  - "ECHO %MINICONDA% %vcvars% (%bits%)"
  - ps: $env:PATH = "$env:MINICONDA;$env:MINICONDA\Scripts;$env:PATH"
  - python -c "import sys;print('Python version is {}'.format(sys.version))"

install:

    - ps: |
        if ($env:bits -eq "64") {
            $env:vcvars = "x86_amd64"
            $env:avjob = "job=Environment%3A%20PLATFORM%3Dx64%2C%20CONFIGURATION%3DRelease"
        } else {
            $env:vcvars = "x86"
            $env:avjob = "job=Environment%3A%20PLATFORM%3Dx86%2C%20CONFIGURATION%3DRelease"
        }

    - conda update --all --yes

    - conda install --yes numpy

    - conda install --yes h5py

    - ps: cd "$env:APPVEYOR_BUILD_FOLDER"

    - ps: $env:DISTUTILS_USE_SDK = "1"

    - ps: $env:MSSdk = "1"

build_script:
    - python setup.py build

test_script:
    - python setup.py test

after_test:
    - ps: mkdir "$env:DEPLOY_DIR"
    - python setup.py bdist_wheel -d %DEPLOY_DIR% %withnix%

artifacts:
- path: $(DEPLOY_DIR)\*
  name: wheels

on_finish:
  - ps: |
      if ($env:RDP -eq "yes") {
          $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }

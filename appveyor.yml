version: 1.5.{build}

image:
  - Visual Studio 2019

environment:

  NIX_VERSION: 1.4.1
  DEPLOY_DIR: deploy
  NIX_DIR: C:\nix
  NIX_INCDIR: C:\nix\include
  NIX_LIBDIR: C:\nix\lib
  BOOST_INCDIR: C:\Libraries\boost_1_67_0\lib64-msvc-14.1
  BOOST_LIBDIR: C:\Libraries\boost_1_67_0\lib64-msvc-14.1

  NIX_APPVEYOR_ROOT: https://ci.appveyor.com/api/projects/G-Node/nix/artifacts/build


  matrix:
    - PYTHON: "C:/Python38-x64"
    - PYTHON: "C:/Python311-x64"
    
init:
  - "ECHO %PYTHON% %vcvars% (%bits%)"
  - ps: $env:PATH = "$env:PYTHON;$env:PATH;C:\Program Files\7-Zip;$env:NIX_DIR\bin"
  - python -c "import sys;print('Python version is {}'.format(sys.version))"

install:
  # TODO: Uncomment when cross-compatibility tests are fixed
  # - ps: |
  #     if ($env:bits -eq "64") {
  #         $env:vcvars = "x86_amd64"
  #         $env:avjob = "job=Environment%3A%20PLATFORM%3Dx64%2C%20CONFIGURATION%3DRelease"
  #         $env:avfname = "nix-$env:NIX_VERSION-win64.exe"
  #     } else {
  #         $env:vcvars = "x86"
  #         $env:avjob = "job=Environment%3A%20PLATFORM%3Dx86%2C%20CONFIGURATION%3DRelease"
  #         $env:avfname = "nix-$env:NIX_VERSION-win32.exe"

  #     }
  # - ps: |
  #     if ($env:pyver -eq "2") {
  #         python -m pip install enum34
  #     }
  # - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  # - ps: mkdir "$env:NIX_DIR"
  # - ps: cd "$env:NIX_DIR"
  # - ps: |
  #     $env:nix_exe_url = "$env:NIX_APPVEYOR_ROOT/$env:avfname`?$env:avjob"
  #     Write-Host "Downloading $env:nix_exe_url"
  #     Invoke-WebRequest -URI $env:nix_exe_url -OutFile "nix.exe"
  # - 7z x nix.exe
  # - cd ..
  - python -m pip install certifi
  - python -m pip install -U pip wheel
  - python -m pip install numpy h5py pytest-xdist scipy pillow matplotlib
  - ps: cd "$env:APPVEYOR_BUILD_FOLDER"
  - set DISTUTILS_USE_SDK="1"
  - set MSSdk="1"

build_script:
  - python setup.py build

test_script:
  # TODO: Force cross-compatibility tests
  # - python setup.py test --addopts "--force-compat"
  - python setup.py test --addopts "-nauto"

after_test:
  - ps: mkdir "$env:DEPLOY_DIR"
  - python setup.py bdist_wheel -d %DEPLOY_DIR% %withnix%

artifacts:
  - path: $(DEPLOY_DIR)\*
    name: wheels

on_finish:
  - ps: |
      if ($env:RDP -eq "yes") {
          $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }
